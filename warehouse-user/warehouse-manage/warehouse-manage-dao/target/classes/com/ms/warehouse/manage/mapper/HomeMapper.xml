<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ms.warehouse.manage.mapper.HomeMapper">
	<resultMap type="com.ms.warehouse.manage.entity.InventoryBiEntity" id="BiEntity">
		<result property="status" jdbcType="INTEGER" column="f_status"/>
		<result property="statusSum" jdbcType="VARCHAR" column="f_status_sum"/>
		<result property="materName" jdbcType="VARCHAR" column="f_mater_name"/>
		<result property="sum" jdbcType="VARCHAR" column="f_sum"/>
	</resultMap>
	<resultMap type="com.ms.warehouse.manage.entity.HomeWarningDetailEntity" id="rankWarnEntity">
		<result property="counts" jdbcType="INTEGER" column="counts"/>
		<result property="warningType" jdbcType="INTEGER" column="warningType"/>
		<result property="days" jdbcType="TIMESTAMP" column="days"/>
	</resultMap>
	<resultMap type="com.ms.warehouse.manage.entity.HomeCountEntity" id="homeCountEntity">
		<result property="materName" jdbcType="VARCHAR" column="f_mater_name"/>
		<result property="materCode" jdbcType="VARCHAR" column="f_mater_code"/>
		<result property="subverName" jdbcType="VARCHAR" column="f_subver_name"/>
		<result property="sumActualCountQuality" jdbcType="VARCHAR" column="f_sum_actual_count_quality"/>
		<result property="floorAreaCode" jdbcType="VARCHAR" column="f_floor_area_code"/>
		<result property="status" jdbcType="VARCHAR" column="f_status"/>
		<result property="countQuality" jdbcType="INTEGER" column="f_count_quality"/>
	</resultMap>
	<!-- 入库信息统计 -->
	<select id="countEntrymainorder" resultType="map">
		SELECT * FROM (
		SELECT COUNT(*) AS sumOk FROM t_ware_entrymainorder WHERE TO_DAYS(f_created_date) = 
		TO_DAYS(NOW()) AND f_status = 3) a,
		(
		SELECT COUNT(*) AS countData FROM t_ware_entrymainorder 
		WHERE TO_DAYS(f_created_date) = TO_DAYS(NOW()) ) b
	</select>
	<!-- 出库信息统计 -->
	<select id="countOutmainorder" resultType="map">
	SELECT * FROM (
		SELECT COUNT(*) AS sumOk FROM t_ware_outmainorder WHERE 
		TO_DAYS(f_created_date) = TO_DAYS(NOW()) AND f_status = 3) a,
		(
		SELECT COUNT(*) AS countData FROM t_ware_outmainorder 
		WHERE TO_DAYS(f_created_date) = TO_DAYS(NOW()) ) b
	</select>
	<!-- 调整单统计 -->
	<select id="countPositionadjust" resultType="map" >
	SELECT * FROM (
		SELECT COUNT(*) AS sumOk FROM t_ware_positionadjustmain WHERE 
		TO_DAYS(f_created_date) = TO_DAYS(NOW()) AND f_status = 2) a,
		(
		SELECT COUNT(*) AS countData FROM t_ware_positionadjustmain 
		WHERE TO_DAYS(f_created_date) = TO_DAYS(NOW())  ) b
	</select>
	<!-- 盘点单统计 -->
	<select id="countStockcheck" resultType="map" >
	SELECT * FROM (
		SELECT COUNT(*) AS sumOk FROM t_ware_stockcheckmain WHERE 
			TO_DAYS(f_created_date) = TO_DAYS(NOW()) AND f_status = 2) a,
			(
			SELECT COUNT(*) AS countData FROM t_ware_stockcheckmain WHERE 
			TO_DAYS(f_created_date) = TO_DAYS(NOW())  ) b
	</select>
	<!-- 当天出库量 -->
	<select id="countOutmainorderDay" resultType="Long" >
		SELECT FLOOR(IFNULL(SUM(a.f_quality_box),0)) AS f_total_quality_sum 
		FROM t_ware_outorderdetail a LEFT JOIN 
		t_ware_outmainorder b ON a.f_mainorder_id = b.f_id 
		
		WHERE TO_DAYS(b.f_created_date) = TO_DAYS(NOW()) AND b.f_status = 3
	</select>
	<!-- 当天入库量量 -->
	<select id="countEntryDay" resultType="Long" >
		SELECT FLOOR(IFNULL(SUM(a.f_quality),0)) AS f_total_quality_sum 
		FROM t_ware_entryorderdetail a LEFT JOIN 
		t_ware_entrymainorder b ON a.f_mainorder_id = b.f_id 
		
		WHERE TO_DAYS(b.f_created_date) = TO_DAYS(NOW()) AND b.f_status = 3
	</select>
	<!-- 当天总库量 -->
	<select id="countInventoryDay" resultType="Long" >
		SELECT FLOOR(IFNULL(SUM(f_total_count - f_lock_stock),0)) AS f_total_count_sum FROM t_ware_inventorymain
	</select>
	<!-- 货位情况占比统计 -->
	<select id="countInventoryBi" resultMap="BiEntity" >
		SELECT f_status,COUNT(f_id) AS f_status_sum FROM t_base_locationinfo GROUP BY f_status
	</select>
	
	<!-- 入库量排名 -->
	<select id="queryEntryorderRank" parameterType="int" resultMap="BiEntity" >
		SELECT a.f_mater_name,FLOOR(SUM(a.`f_quality`)) AS f_sum 
        FROM t_ware_entryorderdetail a 
		LEFT JOIN t_ware_entrymainorder b ON a.f_mainorder_id = b.f_id 
		WHERE b.f_status = 3
		AND DATE_SUB(CURDATE(), INTERVAL #{day,jdbcType=INTEGER} DAY) &lt;= DATE(b.f_created_date)
		GROUP BY a.f_mater_code ORDER BY f_sum DESC LIMIT 10;
	</select>
	<!-- 出库量排名 -->
	<select id="queryOutorderRank" resultMap="BiEntity" parameterType="int">
		SELECT a.f_mater_name,FLOOR(SUM(a.f_quality_box)) AS f_sum FROM t_ware_outorderdetail a 
		LEFT JOIN t_ware_outmainorder b ON a.f_mainorder_id = b.f_id 
		WHERE b.f_status = 3
		AND DATE_SUB(CURDATE(), INTERVAL #{day,jdbcType=INTEGER} DAY) &lt;= DATE(b.f_created_date)
		GROUP BY a.f_mater_code ORDER BY f_sum DESC LIMIT 10
	</select>
	
	<!-- 库存预警 -->
	<select id="queryStockwarningRank" resultMap="rankWarnEntity" parameterType="int">
		SELECT days,IFNULL(counts,0) AS counts
		FROM (
		    SELECT CURDATE() AS days
		    UNION ALL
		    SELECT DATE_SUB(CURDATE(), INTERVAL 1 DAY) AS click_date
		    UNION ALL
		    SELECT DATE_SUB(CURDATE(), INTERVAL 2 DAY) AS click_date
		    UNION ALL
		    SELECT DATE_SUB(CURDATE(), INTERVAL 3 DAY) AS click_date
		    UNION ALL
		    SELECT DATE_SUB(CURDATE(), INTERVAL 4 DAY) AS click_date
		    UNION ALL
		    SELECT DATE_SUB(CURDATE(), INTERVAL 5 DAY) AS click_date
		    UNION ALL
		    SELECT DATE_SUB(CURDATE(), INTERVAL 6 DAY) AS click_date
		) a LEFT JOIN (
		  SELECT DATE(f_created_date) AS click_date, COUNT(*) AS counts,f_warning_type
		  FROM t_ware_stockwarning WHERE f_warning_type = #{type,jdbcType=INTEGER}
		  GROUP BY click_date
		) b ON a.days = b.click_date ORDER BY days DESC;
	</select>
	<select id="queryStockcheckCountBy" resultMap="homeCountEntity" parameterType="map">
		SELECT a.f_mater_name,a.f_mater_code,a.f_subver_name,SUM(a.f_actual_count_quality) AS f_sum_actual_count_quality 
		FROM t_ware_stockcheckdetail a 
		LEFT JOIN t_ware_stockcheckmain b ON a.f_main_id = b.f_id
		WHERE b.f_status = 3
		AND b.f_created_date &gt;= #{startTime}
		AND b.f_created_date &lt;= #{endTime}
		GROUP BY a.f_mater_code,a.f_subver_id
	</select>
	<select id="queryLocationinfoAll" resultMap="homeCountEntity">
		SELECT * FROM (
		SELECT `f_floor_area_code`,SUM(CASE WHEN  t.`f_status`=1 THEN 1 ELSE 0 END) AS f_count_quality,1 AS f_status
		FROM t_base_locationinfo t
		LEFT JOIN `t_base_areainfo` a ON t.`f_area_id` = a.`f_id`
		GROUP BY`f_area_id`
		UNION ALL
		SELECT `f_floor_area_code`,SUM(CASE WHEN t.`f_status` &lt;&gt; 1 THEN 1 ELSE 0 END) AS f_count_quality,0 AS f_status
		FROM t_base_locationinfo t
		LEFT JOIN `t_base_areainfo` a ON t.`f_area_id` = a.`f_id`
		GROUP BY`f_area_id`) t
		ORDER BY t.`f_floor_area_code`,f_status
	</select>
</mapper>

